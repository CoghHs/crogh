generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  password   String
  avatar     String?
  bio        String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  artwork    Artwork[]
  comments   Comment[]
  likes      Like[]
  Favorite   Favorite[]
}

model Artwork {
  id          Int       @id @default(autoincrement())
  title       String
  photo       String
  description String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  views       Int       @default(0)
  likes       Like[]
  comments    Comment[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  payload    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  artwork    Artwork  @relation(fields: [artworkId], references: [id], onDelete: Cascade)
  artworkId  Int
}

model Like {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  artwork    Artwork  @relation(fields: [artworkId], references: [id], onDelete: Cascade)
  artworkId  Int

  @@id(name: "id", [userId, artworkId])
}

model Favorite {
  id         Int      @id @default(autoincrement())
  imageId    String
  imageUrl   String
  userId     Int
  category   String
  created_at DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, imageId, category])
}
